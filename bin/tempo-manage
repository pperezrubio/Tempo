#!/usr/bin/env python
# vim: tabstop=4 shiftwidth=4 softtabstop=4
#
# Copyright 2012 Rackspace
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

"""Tempo CLI Management Utility"""

import os
import sys

possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir, 'tempo', '__init__.py')):
    sys.path.insert(0, possible_topdir)

from tempo import config
from tempo import cron
from tempo import log
from tempo.db import migration
from tempo.openstack.common import cfg

CFG = config.CFG

cli_opts = [
    cfg.BoolOpt('dry-run',
                default=False,
                help='Dry run mode')
]

CFG.register_cli_opts(cli_opts)

if __name__ == '__main__':
    args = CFG(sys.argv[1:])
    log.setup()

    if not args:
        sys.exit("usage: tempo-api < db-sync | update-cron >")

    cmd = args[0]

    if cmd == "update-cron":
        if CFG.dry_run:
            print cron.crontab()
        else:
            cron.update()
    elif cmd == "db-sync":
        if CFG.dry_run:
            sys.exit('dry-run not supported for db-sync')
        else:
            migration.db_sync()
    else:
        sys.exit("Unknown cmd '%s'" % cmd)
